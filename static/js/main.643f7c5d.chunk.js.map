{"version":3,"sources":["component/RhythmSquare.js","component/RhythmColumn.js","component/SpeedChanger.js","component/RhythmVisualizer.js","component/sounds/ccc.wav","component/sounds/ccd.wav","component/sounds/cce.wav","component/sounds/ccf.wav","component/sounds/ccg.wav","component/sounds/cch.wav","component/RhythmPanel.js","index.js"],"names":["RhythmSquare","state","activated","sound","props","loader","loadfile_s","selected_file","includes","colnum","rownum","console","log","setState","saver","save_s","records","push","downloader","download_s","download_ready","d","downloadToFile","cleaner","clear","player","play","updateButton","className","cssStates","this","onClick","React","Component","content","filename","contentType","a","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","revokeObjectURL","RhythmColumn","updateState","cssstates","act_col","sounds","map","v","i","SpeedChanger","faster_g","slower_g","speedo","RhythmVisualizer","audioData","Uint8Array","canvas","createRef","tick","analyser","getByteTimeDomainData","dataArray","rafId","requestAnimationFrame","audioContext","window","AudioContext","webkitAudioContext","createAnalyser","frequencyBinCount","length","source","createMediaElementSource","connect","destination","current","height","width","context","getContext","sliceWidth","lineWidth","strokeStyle","clearRect","beginPath","moveTo","x","y","lineTo","stroke","draw","ref","RhythmPanel","load_s","intervals","isplaying","Audio","ccc","ccd","cce","ccf","ccg","cch","onChangeHandler","event","t","target","files","reader","FileReader","addEventListener","result","parse","active","readAsText","upload_g","save_g","load_g","clear_g","play_col_test","play_g","setInterval","pause_g","clearInterval","stop_g","Math","max","min","name","onChange","col_starter","panel_buttons","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.643f7c5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './RhythmSquare.css';\r\n\r\nexport default class RhythmSquare extends React.Component{\r\n  //consts\r\n  static propTypes = {\r\n    colnum: PropTypes.number,\r\n    rownum: PropTypes.number,\r\n\r\n    activated: PropTypes.number,\r\n    clear: PropTypes.bool,\r\n    save_s: PropTypes.bool,\r\n    download_s: PropTypes.bool,\r\n  };\r\n  static cssStates = [\"rest\", \"activated\"]\r\n  static records = []\r\n  static selected_file = null\r\n\r\n  // Var\r\n  state = {\r\n    activated: 0,\r\n    sound: this.props.sound\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n    <div className = {RhythmSquare.cssStates[this.state.activated] + \" allbuttons\"} \r\n        onClick = {this.updateButton}>\r\n        {/* testing */}\r\n        {this.state.activated}\r\n        {this.props.activated}\r\n        {/* testing */}\r\n        {this.player()}\r\n        {this.cleaner()}\r\n        {this.saver()}\r\n        {this.downloader()}\r\n        {this.loader()}\r\n      </div >\r\n      );\r\n  }\r\n\r\n  loader = () => {\r\n    if(this.props.loadfile_s){\r\n      if(RhythmSquare.selected_file.includes(\"c\"+ this.props.colnum + \"r\" + this.props.rownum)){\r\n        console.log(\"asdad\")\r\n        this.setState({\r\n          activated: 1\r\n        })\r\n      } else{\r\n        this.setState({\r\n          activated: 0\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  saver = () => {\r\n    if(this.props.save_s && this.state.activated){\r\n      console.log(\"before\", RhythmSquare.records)\r\n      RhythmSquare.records.push(\"c\"+ this.props.colnum + \"r\" + this.props.rownum)\r\n      \r\n    }\r\n  }\r\n\r\n  static downloadToFile = (content, filename, contentType) => {\r\n    const a = document.createElement('a');\r\n    const file = new Blob([JSON.stringify(content)], {type: contentType});\r\n    \r\n    a.href= URL.createObjectURL(file);\r\n    a.download = filename;\r\n    a.click();\r\n  \r\n    URL.revokeObjectURL(a.href);\r\n  };\r\n  \r\n  static download_ready = false\r\n  downloader = () => {\r\n    if(this.props.download_s && RhythmSquare.download_ready){\r\n      RhythmSquare.download_ready = false\r\n      console.log(\"after: \", RhythmSquare.records)\r\n      var d = {\"active\" : RhythmSquare.records}\r\n      RhythmSquare.downloadToFile(d, 'my-new-file.json', 'text/plain');\r\n    }\r\n  } \r\n\r\n  cleaner = () => {\r\n    if(this.props.clear && this.state.activated){\r\n      this.setState({\r\n        activated: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  player = () => {\r\n    if((this.props.activated) && this.state.activated)\r\n      this.state.sound.play()\r\n  }\r\n\r\n  updateButton = () => {\r\n    this.state.sound.play()\r\n    this.setState({\r\n      activated: this.state.activated ^ 1\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport RhythmSquare from './RhythmSquare';\r\nimport './RhythmColumn.css';\r\n\r\nclass RhythmColumn extends React.Component{\r\n  //CONST\r\n  static propTypes = {\r\n    colnum: PropTypes.number,\r\n    act_col: PropTypes.number,\r\n    clear: PropTypes.bool,\r\n    save_s: PropTypes.bool\r\n  };\r\n  static cssstates =  [\"colrest\", \"colact\"]\r\n  //VAR\r\n  state = {\r\n    activated: 0\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <div className = {\"allcol \" + RhythmColumn.cssstates[this.state.activated || (this.props.act_col === this.props.colnum)?1:0]}>\r\n          {\r\n            this.props.sounds.map((v, i) =>\r\n              <RhythmSquare colnum = {this.props.colnum} rownum = {i} activated= {this.state.activated || (this.props.act_col === this.props.colnum)?1:0 } sound = {v} clear = {this.props.clear} save_s = {this.props.save_s} \r\n                download_s = {this.props.download_s}\r\n                loadfile_s = {this.props.loadfile_s}></RhythmSquare>\r\n            )\r\n          }\r\n          <div className = {\"testcol\"} onClick = {this.updateState}>{this.props.act_col}</div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n\r\n  updateState = () => {\r\n    this.setState({\r\n      activated: this.state.activated ^ 1\r\n    })\r\n  }\r\n}\r\n\r\nexport default RhythmColumn;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './SpeedChanger.css';\r\n\r\nexport default class SpeedChanger extends React.Component{\r\n    static propTypes = {\r\n        faster_g: PropTypes.func,\r\n        slower_g: PropTypes.func,\r\n        speedo: PropTypes.number\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"speed-changer\">\r\n                <button className = \"speed-changer-button\" onClick = {this.faster_g}>+</button>\r\n                <div className = \"speed-changer-speed\">{this.props.speedo}</div>\r\n                <button className = \"speed-changer-button\" onClick = {this.slower_g}>-</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    faster_g = () =>{\r\n        this.props.faster_g()\r\n    }\r\n\r\n    slower_g = () =>{\r\n        this.props.slower_g()\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport './RhythmVisualizer.css';\r\n// IMPORTANT!!\r\nexport default class RhythmVisualizer extends React.Component{\r\n\r\n  state = {\r\n    \r\n    audioData: new Uint8Array(0)\r\n  }\r\n  canvas = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    this.analyser = this.audioContext.createAnalyser();\r\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n\r\n    var i;\r\n    for (i = 0; i < this.props.sounds.length; i++) {\r\n      let source = this.audioContext.createMediaElementSource(this.props.sounds[i])\r\n      source.connect(this.audioContext.destination)\r\n      source.connect(this.analyser)\r\n    }\r\n    this.rafId = requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   cancelAnimationFrame(this.rafId);\r\n  //   this.analyser.disconnect();\r\n  //   this.source.disconnect();\r\n  // }\r\n\r\n  tick = () => {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ audioData: this.dataArray });\r\n    this.rafId = requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  draw() {\r\n    const canvas = this.canvas.current;\r\n    const height = canvas.height;\r\n    const width = canvas.width;\r\n    const context = canvas.getContext('2d');\r\n    \r\n    const sliceWidth = (width * 1.0) / this.state.audioData.length;\r\n    context.lineWidth = 2;\r\n    context.strokeStyle = '#000000';\r\n    context.clearRect(0, 0, width, height);\r\n    context.beginPath();\r\n    context.moveTo(0, height / 2);\r\n    let x = 0;\r\n    for (const item of this.state.audioData) {\r\n      const y = (item / 255.0) * height;\r\n      context.lineTo(x, y);\r\n      x += sliceWidth;\r\n    }\r\n    context.lineTo(x, height / 2);\r\n    context.stroke();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.draw();\r\n  }\r\n\r\n  render() {\r\n      return ( \r\n          <canvas className = \"visual-box\" ref={this.canvas}>\r\n          \r\n          </canvas>\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/ccc.595e2854.wav\";","export default __webpack_public_path__ + \"static/media/ccd.7ec7142f.wav\";","export default __webpack_public_path__ + \"static/media/cce.49e90834.wav\";","export default __webpack_public_path__ + \"static/media/ccf.beb2075e.wav\";","export default __webpack_public_path__ + \"static/media/ccg.b4e6a17c.wav\";","export default __webpack_public_path__ + \"static/media/cch.b5a530be.wav\";","import React from 'react';\r\n\r\nimport './RhythmPanel.css';\r\nimport RhythmColumn from './RhythmColumn';\r\nimport RhythmSquare from './RhythmSquare';\r\nimport SpeedChanger from './SpeedChanger'\r\nimport RhythmVisualizer from './RhythmVisualizer'\r\n\r\nimport ccc from './sounds/ccc.wav'\r\nimport ccd from './sounds/ccd.wav'\r\nimport cce from './sounds/cce.wav'\r\nimport ccf from './sounds/ccf.wav'\r\nimport ccg from './sounds/ccg.wav'\r\nimport cch from './sounds/cch.wav'\r\n\r\nclass RhythmPanel extends React.Component{\r\n  // CONST\r\n  static panel_buttons = [\"play\", \"pause\", \"stop\", \"faster\", \"slower\"]\r\n  static col_starter = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\r\n  //VAR\r\n  state = {\r\n    speedo: 500,\r\n    act_col: -1,\r\n\r\n    clear: false,\r\n    \r\n    save_s: false,\r\n    download_s: false,\r\n\r\n    load_s: false,\r\n    loadfile_s: false,\r\n  }\r\n  intervals = null;\r\n  isplaying = false;\r\n  sounds = [new Audio(ccc), new Audio(ccd), new Audio(cce), new Audio(ccf), new Audio(ccg), new Audio(cch)]\r\n\r\n\r\n  render() {\r\n    return ( \r\n      <div >\r\n       \r\n            <div className = {\"button-boss\"}>\r\n              <div className = {\"button-container\"}>\r\n                <button className = {\"panel-buttons\"} onClick = {this.play_g}>test play</button>\r\n                <button className = {\"panel-buttons\"} onClick = {this.pause_g}>test pause</button>\r\n                <button className = {\"panel-buttons\"} onClick = {this.stop_g}>test stop</button>\r\n              </div>\r\n              <div className = {\"button-container\"}>\r\n                <button className = {\"panel-buttons\"} onClick = {this.clear_g}>test clear</button>\r\n                <button className = {\"panel-buttons\"} onClick = {this.save_g}>test save</button>\r\n                <button className = {\"panel-buttons\"} onClick = {this.load_g}>test load</button>\r\n                {this.state.load_s ? <div><input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/> <button onClick = {this.upload_g}>test upload</button> </div> : <div/>}\r\n              </div>\r\n              { <RhythmVisualizer sounds = {this.sounds} />}\r\n            </div>\r\n          <div className = {\"panel\"}>\r\n          {\r\n            (RhythmPanel.col_starter).map((v) =>\r\n                <RhythmColumn\r\n                  colnum = {v}\r\n                  act_col = {this.state.act_col}\r\n                  clear = {this.state.clear}\r\n                  save_s = {this.state.save_s}\r\n                  download_s = {this.state.download_s}\r\n                  loadfile_s = {this.state.loadfile_s}\r\n                  sounds = {this.sounds}\r\n                ></RhythmColumn>\r\n            )\r\n          }\r\n          </div>\r\n          <SpeedChanger faster_g = {this.faster_g} slower_g = {this.slower_g} speedo = {this.state.speedo}></SpeedChanger>\r\n      </div >\r\n    );\r\n  }\r\n  \r\n  onChangeHandler=event=>{\r\n    const t = event.target.files[0]\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', (event) => {\r\n      const result = event.target.result;\r\n      RhythmSquare.selected_file = JSON.parse(result).active\r\n    });\r\n    reader.readAsText(t);\r\n    \r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    //MARK: clear_g\r\n    if(this.state.clear){\r\n      this.setState({\r\n        clear: false\r\n      })\r\n    }\r\n\r\n    if(this.state.save_s){\r\n      this.setState({\r\n        save_s: false,\r\n        download_s: true\r\n      })\r\n      RhythmSquare.download_ready = true\r\n    }\r\n\r\n    if(this.state.loadfile_s){\r\n      console.log(\"loadfile finish\")\r\n      this.setState({\r\n        loadfile_s: false,\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  upload_g = () => {\r\n    if(RhythmSquare.selected_file){\r\n      this.setState({\r\n        loadfile_s: true\r\n      })\r\n    }\r\n  }\r\n\r\n  save_g = () => {\r\n    RhythmSquare.records = []\r\n    this.setState({\r\n      save_s: true\r\n    })\r\n  }\r\n\r\n  load_g = () => {\r\n    this.setState({\r\n      load_s: this.state.load_s ^ 1\r\n    })\r\n  }\r\n\r\n  clear_g = () => {\r\n    // MARK: componentDidUpdate\r\n    this.setState({\r\n      clear: true\r\n    })\r\n  }\r\n\r\n\r\n  play_col_test = () =>{\r\n    this.setState({\r\n      act_col: (this.state.act_col + 1) % 16\r\n    })\r\n  }\r\n\r\n  play_g = () => {\r\n    this.intervals = setInterval(this.play_col_test,this.state.speedo)\r\n    this.isplaying = true;\r\n  }\r\n  pause_g = () => {\r\n    clearInterval(this.intervals)\r\n    this.isplaying = false;\r\n  }\r\n  stop_g = () =>{\r\n    clearInterval(this.intervals)\r\n    this.isplaying = false;\r\n\r\n    this.setState({\r\n      act_col: -1\r\n    })\r\n  }\r\n\r\n  faster_g = () => {\r\n    this.setState({\r\n      speedo: Math.max(100, this.state.speedo-100)\r\n    })\r\n    if(this.isplaying){\r\n      clearInterval(this.intervals)\r\n      this.intervals = setInterval(this.play_col_test,this.state.speedo)\r\n    }\r\n  }\r\n\r\n  slower_g = () => {\r\n    this.setState({\r\n      speedo: Math.min(1000, this.state.speedo+100)\r\n    })\r\n    if(this.isplaying){\r\n      clearInterval(this.intervals)\r\n      this.intervals = setInterval(this.play_col_test,this.state.speedo)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default RhythmPanel;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport RhythmPanel from './component/RhythmPanel';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <App /> */}\r\n    {/* <RhythmSquare activated= {0} sound = {new Audio(ccc)}></RhythmSquare> */}\r\n    {/* <RhythmColumn \r\n      id = {0}\r\n      cnt = {0}\r\n      sounds = {[new Audio(ccc), new Audio(ccd), new Audio(cce), new Audio(ccf), new Audio(ccg), new Audio(cch)]}\r\n    ></RhythmColumn> */}\r\n    <RhythmPanel></RhythmPanel>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}